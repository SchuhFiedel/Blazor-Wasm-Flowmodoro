@using Recurop

<div class="timer"
    <h2>@TitleText</h2>
    <p style="white-space: pre-wrap">@(string.IsNullOrEmpty(SubtitleText) ? " " : SubtitleText)</p>
    
    <div >
        <p style="visibility: @(_timerVisible ? "visible" : "hidden"); font-size: 75px;">@this._displayTime</p>
        <div>
            <button class="btn btn-sm btn-primary" disabled=@(!StopWatchOperation.CanBeStarted || !TimerOpertation.CanBeStarted ? true : false)
            @onclick="StartTimer">
                Start
            </button>
            <button class="btn btn-sm btn-danger" disabled=@(StopWatchOperation.IsRecurring || TimerOpertation.IsRecurring ? false : true)
            @onclick="StopTimer">
                Stop
            </button>
            <button class="btn btn-sm btn-danger" disabled=@(StopWatchOperation.IsRecurring || TimerOpertation.IsRecurring ? true : false)
            @onclick="ResetTimer">
                Reset
            </button>
            <button class="btn btn-sm btn_danger" disabled=@(!CanBeSwapped())
            @onclick="SwapMode">
                SwapMode
            </button>
        </div>
    </div>
    @if (BlinkerOperation?.Status == RecurringOperationStatus.Executing)
    {
        <div>
            <audio autoplay loop><source src="/Assets/Audio/30-seconds-alarm.mp3" /></audio>
        </div>
    }
</div>