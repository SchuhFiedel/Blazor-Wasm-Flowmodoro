@using Flowmodoro.Client.Models;

<!-- https://stackoverflow.com/questions/59302823/blazor-re-ordering-a-list-with-drag-and-drop -->

<h3>DragAndDropListComponent</h3>

<ul ondragover="event.preventDefault();" style="margin:20px">
    @foreach (var item in Jobs)
    {
        if (item != null)     //Change @ondrop to @ondragover to update UI in real time
        {
            <JobListItem item="item" OnDrop="Drop" OnStartDrag="StartDrag"></JobListItem>
        }
        else
        {
            <li>No Items - Click Here To Create New Ones</li>
        }
    }
</ul>

@*<button @onclick="ReportList">List</button>*@
@code
{

    int startDragIndex;

    List<JobModel> Jobs = new List<JobModel> {
        new JobModel() { Id = Guid.NewGuid(), Description= "Test1", LastUpdated = DateTime.Now, Status = JobStatuses.Todo},
        new JobModel() { Id = Guid.NewGuid(), Description= "Test2", LastUpdated = DateTime.Now, Status = JobStatuses.Todo},
        new JobModel() { Id = Guid.NewGuid(), Description= "Test3", LastUpdated = DateTime.Now, Status = JobStatuses.Todo},
        new JobModel() { Id = Guid.NewGuid(), Description= "Test4", LastUpdated = DateTime.Now, Status = JobStatuses.Todo},
        new JobModel() { Id = Guid.NewGuid(), Description= "Test5", LastUpdated = DateTime.Now, Status = JobStatuses.Todo},
        new JobModel() { Id = Guid.NewGuid(), Description= "Test6", LastUpdated = DateTime.Now, Status = JobStatuses.Todo},
        new JobModel() { Id = Guid.NewGuid(), Description= "Test7", LastUpdated = DateTime.Now, Status = JobStatuses.Todo},
        new JobModel() { Id = Guid.NewGuid(), Description= "Test8", LastUpdated = DateTime.Now, Status = JobStatuses.Todo},
    };

    void StartDrag(JobModel item)
    {
        startDragIndex = GetIndex(item);
        Console.WriteLine($"DragStart for {item.Id} index {startDragIndex}");
    }

    int GetIndex(JobModel item)
    {
        return Jobs.FindIndex(a => a.Id == item.Id);
    }

    void Drop(JobModel itemAtDropPosition)
    {
        if (itemAtDropPosition != null)
        {
            Console.WriteLine($"Drop item {itemAtDropPosition.Description} ({itemAtDropPosition.Id})");

            var dropIndex = GetIndex(itemAtDropPosition);

            Console.WriteLine($"Drop index is {dropIndex}, move from {startDragIndex}");

            // get dragged item
            var draggedItem = Jobs[startDragIndex];
            // remove dragged item from dragStart index
            Jobs.RemoveAt(startDragIndex);
            // insert dragged item at dropIndex
            Jobs.Insert(dropIndex, draggedItem);

            // update current selection
            startDragIndex = dropIndex;

            StateHasChanged();
        }
        else
        {
            Console.WriteLine("Drop - null");
        }
    }

    void ReportList()
    {
        int i = 0;
        foreach (var item in Jobs)
        {
            Console.WriteLine($"{i++}: {item.Id} = {item.Description}");
        }
    }

    
}